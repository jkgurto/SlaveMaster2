package game.library.states {        import fl.controls.Button;	import fl.controls.Label;		import flash.events.MouseEvent;		import flash.text.AntiAliasType;	import flash.text.TextFieldAutoSize;        import game.library.states.MenuState;        public class GameOverState extends MenuState {                private var gameOverLabel:Label;		private var gameOverInfoLabel:Label;		private var playAgainButton:Button;				private var _win:Boolean;		        public function GameOverState(m:Main) {            super(m);                        reset();        }                public function set win(value:Boolean):void {            _win = value;						// Set text			if (_win) {				gameOverInfoLabel.text = "Win";			}			else {				gameOverInfoLabel.text = "Lose";			}        }                override public function reset():void {            			// Title			gameOverLabel = new Label();						gameOverLabel.autoSize = TextFieldAutoSize.CENTER;			gameOverLabel.textField.antiAliasType = AntiAliasType.NORMAL;			gameOverLabel.setStyle("embedFonts", true);			gameOverLabel.setStyle("textFormat", labelFormat);						gameOverLabel.text = "Game Over";						gameOverLabel.x = LABEL_X - (gameOverLabel.width * 0.5);			gameOverLabel.y = TOP_LABEL_Y - (gameOverLabel.height * 0.5);						// Text			gameOverInfoLabel = new Label();						gameOverInfoLabel.autoSize = TextFieldAutoSize.CENTER;			gameOverInfoLabel.textField.antiAliasType = AntiAliasType.NORMAL;			gameOverInfoLabel.setStyle("embedFonts", true);			gameOverInfoLabel.setStyle("textFormat", infoLabelFormat);						// Check for win			_win = false;			gameOverInfoLabel.text = "Lose";						gameOverInfoLabel.x = LABEL_X - (gameOverInfoLabel.width * 0.5);			gameOverInfoLabel.y = gameOverLabel.y + gameOverLabel.height + BUTTON_SPACE_Y;						// Again			playAgainButton = new Button();						playAgainButton.textField.antiAliasType = AntiAliasType.NORMAL;			playAgainButton.setStyle("embedFonts", true);			playAgainButton.setStyle("textFormat", buttonFormat);						playAgainButton.label = "Play Again";						playAgainButton.x = LABEL_X - (playAgainButton.width * 0.5);			playAgainButton.y = gameOverInfoLabel.y + gameOverInfoLabel.height + BUTTON_SPACE_Y;			        }                override public function enter():void {            stage.addChild(gameOverLabel);            stage.addChild(gameOverInfoLabel);            stage.addChild(playAgainButton);                        playAgainButton.addEventListener(MouseEvent.CLICK, playAgainButtonClicked);        }                override public function exit():void {            stage.removeChild(gameOverLabel);			stage.removeChild(gameOverInfoLabel);						playAgainButton.removeEventListener(MouseEvent.CLICK, playAgainButtonClicked);			stage.removeChild(playAgainButton);        }                private function playAgainButtonClicked(event:MouseEvent):void {			_main.currentState = "StartState";		}    }}